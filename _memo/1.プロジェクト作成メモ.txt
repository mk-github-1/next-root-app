## Node.js環境準備
Power Shellで実施

・Power Shellセキュリティポリシーを一時的に緩める
> Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process

--------------------------------------------------
■ Node.js環境の準備

・Node.jsバージョン管理ツール NVM for Windowsをインストール
https://github.com/coreybutler/nvm-windows/releases

どちらかを利用
nvm-setup.exe
nvm-setup.zip

・Node.js 22をインストール
> nvm install 22

・Node.js 22に変更
> nvm use 22
> nvm current

・インストールされているNode.jsのバージョン一覧を表示
> nvm list

--------------------------------------------------
■ グローバル設定の確認は不要？
> npm list -g --depth 0

C:\Program Files\nodejs -> .\
+-- corepack@0.23.0
`-- npm@10.2.4

--------------------------------------------------
## プロジェクトの準備

■ rootプロジェクトのフォルダを作成(フォルダパスは任意)
・フォルダ作成
> cd {任意のフォルダ}
> mkdir next-app-root

・フォルダ移動
> cd {任意のフォルダパス}\next-app-root

--------------------------------------------------
■ Next.js frontendプロジェクト作成
・Power Shellセキュリティポリシーを一時的に緩める
> Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process

・Next.js backendプロジェクト作成
> {任意のフォルダパス}\next-root-app npx create-next-app@latest
Need to install the following packages:
create-next-app@15.3.1
Ok to proceed? (y) y

√ What is your project named? ... frontend
√ Would you like to use TypeScript? ... No / 〇Yes
√ Would you like to use ESLint? ... No / 〇Yes
√ Would you like to use Tailwind CSS? ... No / 〇Yes
√ Would you like your code inside a `src/` directory? ... No / 〇Yes
√ Would you like to use App Router? (recommended) ... No / 〇Yes
√ Would you like to use Turbopack for `next dev`? ... No / 〇Yes
√ Would you like to customize the import alias (`@/*` by default)? ... 〇No / Yes..
... 中略 ...
Success! Created frontend at C:\Users\user\frontend

・.gitフォルダを削除
※後でGitHub管理をするため

・.gitignoreをnext-root-appルートプロジェクトに移動して修正、サンプルプロジェクトの.gitignoreをコピペでOK
※後でGitHub管理をするため

・package.jsonコピペでライブラリを追加

・npmインストール
> npm install

--------------------------------------------------
■ Next.js backendプロジェクト作成
・Power Shellセキュリティポリシーを一時的に緩める
Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process

・Next.js backendプロジェクト作成
> {任意のフォルダパス}\next-root-app npx create-next-app@latest
Need to install the following packages:
create-next-app@15.3.1
Ok to proceed? (y) y

√ What is your project named? ... backend
√ Would you like to use TypeScript? ... No / 〇Yes
√ Would you like to use ESLint? ... No / 〇Yes
√ Would you like to use Tailwind CSS? ... 〇No / Yes  ※backendは使用しないのでNoを選択
√ Would you like your code inside a `src/` directory? ... No / 〇Yes
√ Would you like to use App Router? (recommended) ... No / 〇Yes
√ Would you like to use Turbopack for `next dev`? ... No / 〇Yes
√ Would you like to customize the import alias (`@/*` by default)? ... 〇No / Yes..
... 中略 ...
Success! Created frontend at C:\Users\user\backend

・.gitフォルダを削除
※後でGitHub管理をするため

・.gitignoreを削除
※後でGitHub管理をするため、frontendのものをnext-root-appのルートプロジェクトで利用

・package.jsonコピペでライブラリを追加

・npmインストール
> npm install


--------------------------------------------------
## Visual Studio Codeの準備

■ Visual Studio Codeをインストール
https://code.visualstudio.com/

■ Visual Studio Codeでrootフォルダを開く
「ファイル」 → 「フォルダを開く」 → rootプロジェクトを選択

■ VS Code拡張機能のインストール
Auto Rename Tag
ESLint
Git Graph
GitLens - Git supercharged
indent-rainbow
IntelliCode API Usage Examples
Japanese Language Pack for Visual Studio Code
Prettier - Code formatter

■ VS Codeの設定を追加
・rootプロジェクトに.vscodeフォルダを作成
mkdir .vscode

・.vscodeのsettings.jsonをコピペで追加

VS Codeを再起動

■ VS Codeのデバッグ設定を追加
.vscodeのlaunch.jsonをコピペで追加


--------------------------------------------------
## DB準備

・DBは何でもよいが、サンプルプロジェクトでは勉強用にGitHubに置くので、ファイルDBのSQLiteを利用
通常はファイルDB以外のPostgreSQLなどを使用しましょう
SQLite, PostgreSQL, MariaDB, MySQL, SQL Server Expressなど

・DB管理ツールDBeaverのインストール、どのDBでも大体利用できる
DBeaver Community
https://dbeaver.io/download/

・SQLiteをダウンロード
https://www.sqlite.org/download.html
sqlite-tools-win-x64-3490100.zip

・解凍したらフォルダ名を変更して、Cドライブ直下に移動
TypeScirptからはプログラムで操作するので、Windowsからも動かす想定

> C:\sqlite

・Windowsの環境変数 > xxのユーザー環境変数に設定する
Path C:\sqlite

・設定確認
PS C:\Users\user> sqlite3 -version
3.49.1 ... (64-bit)

コンポーネントの追加チェックは基本的に不要ですが
SQLiteではAssociate SQLite database filesはチェックを入れると拡張子が関連付く

・初回表示時、確認画面が表示される
Keep DBeaver being scanned by Microsoft Defenderを選択する

・Data Shareでは
Do not data shareをチェックし、Confirmを選択する

・SQLite用のドライバをダウンロードする
サンプルのDBとテーブルが表示されいるが、ドライバがないのでクリックしてダウンロードする

・DB用フォルダ作成
backend\dataにdata.dbを作成
> cd {任意のフォルダパス}\next-root-app\backend
> mkdir data

・フォルダ移動
> cd {任意のフォルダパス}\next-app-root\backend\data

・空のDB作成
> sqlite3 :memory: ".backup data.db"

・DBeaverで接続
DBeaverでSQLiteを選択してdata.dbのパスを指定すると表示される